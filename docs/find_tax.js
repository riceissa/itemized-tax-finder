/* Generated by the Nim Compiler v2.2.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI536871099 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI536871071 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI536871314 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536870918 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI536870916 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536870917 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536871336 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI536871343 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536871270 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI536871258 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI536871265 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI536870915 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736772 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1224736772 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1224736772.node = NNI1224736772;
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI33555171.base = NTI33555167;
NTI33555172.base = NTI33555171;
NTI1224736772.base = NTI33555172;
var NNI33555836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555836.node = NNI33555836;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555172;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI536870915 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "value", len: 0, typ: NTI33554445, name: "value", sons: null}, 
{kind: 1, offset: "tax", len: 0, typ: NTI33554445, name: "tax", sons: null}]};
NTI536870915.node = NNI536870915;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555172;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555173.base = NTI33555171;
NTI134217746.base = NTI33555173;
NTI536871258.base = NTI33554445;
var NNI536871265 = {kind: 3, offset: "oResultPrivate", len: 2, typ: NTI33554466, name: "oResultPrivate", sons: [[setConstr(0), {kind: 1, offset: "eResultPrivate", len: 0, typ: NTI33554449, name: "eResultPrivate", sons: null}], 
[setConstr(1), {kind: 1, offset: "vResultPrivate", len: 0, typ: NTI536871258, name: "vResultPrivate", sons: null}]]};
NTI536871265.node = NNI536871265;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555172;
NTI536871270.base = NTI33554445;
NTI536870918.base = NTI536870915;
var NNI536870916 = {kind: 1, offset: "hist", len: 0, typ: NTI536870918, name: "hist", sons: null};
NTI536870916.node = NNI536870916;
var NNI536870917 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "hist", len: 0, typ: NTI536870916, name: "hist", sons: null}, 
{kind: 1, offset: "round_before_summing", len: 0, typ: NTI33554466, name: "round_before_summing", sons: null}, 
{kind: 1, offset: "sum", len: 0, typ: NTI33554445, name: "sum", sons: null}]};
NTI536870917.node = NNI536870917;
NTI536871336.base = NTI536870917;
var NNI536871343 = {kind: 3, offset: "oResultPrivate", len: 2, typ: NTI33554466, name: "oResultPrivate", sons: [[setConstr(0), {kind: 1, offset: "eResultPrivate", len: 0, typ: NTI33554449, name: "eResultPrivate", sons: null}], 
[setConstr(1), {kind: 1, offset: "vResultPrivate", len: 0, typ: NTI536871336, name: "vResultPrivate", sons: null}]]};
NTI536871343.node = NNI536871343;
var NNI536871314 = {kind: 3, offset: "oResultPrivate", len: 2, typ: NTI33554466, name: "oResultPrivate", sons: [[setConstr(0), {kind: 1, offset: "eResultPrivate", len: 0, typ: NTI33554449, name: "eResultPrivate", sons: null}], 
[setConstr(1), {kind: 1, offset: "vResultPrivate", len: 0, typ: NTI33554445, name: "vResultPrivate", sons: null}]]};
NTI536871314.node = NNI536871314;
NTI536871071.base = NTI536870917;
NTI536871099.base = NTI536870916;

function arrayConstr(len_p0, value_p1, typ_p2) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; ++i) result[i] = nimCopy(null, value_p1, typ_p2);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_p0, src_p1, ti_p2) {
  var result_33557321 = null;

    switch (ti_p2.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer__system_u2869(ti_p2))) {
      result_33557321 = src_p1;
      }
      else {
        result_33557321 = [src_p1[0], src_p1[1]];
      }
      
      break;
    case 19:
            if (dest_p0 === null || dest_p0 === undefined) {
        dest_p0 = {};
      }
      else {
        for (var key in dest_p0) { delete dest_p0[key]; }
      }
      for (var key in src_p1) { dest_p0[key] = src_p1[key]; }
      result_33557321 = dest_p0;
    
      break;
    case 18:
    case 17:
      if (!((ti_p2.base == null))) {
      result_33557321 = nimCopy(dest_p0, src_p1, ti_p2.base);
      }
      else {
      if ((ti_p2.kind == 17)) {
      result_33557321 = (dest_p0 === null || dest_p0 === undefined) ? {m_type: ti_p2} : dest_p0;
      }
      else {
        result_33557321 = (dest_p0 === null || dest_p0 === undefined) ? {} : dest_p0;
      }
      }
      nimCopyAux(result_33557321, src_p1, ti_p2.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_p1)) { 
        if(dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new src_p1.constructor(src_p1);
        } else {
          dest_p0.set(src_p1, 0);
        }
        result_33557321 = dest_p0;
      } else {
        if (src_p1 === null) {
          result_33557321 = null;
        }
        else {
          if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
            dest_p0 = new Array(src_p1.length);
          }
          result_33557321 = dest_p0;
          for (var i = 0; i < src_p1.length; ++i) {
            result_33557321[i] = nimCopy(result_33557321[i], src_p1[i], ti_p2.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_p1 === null) {
        result_33557321 = null;
      }
      else {
        if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new Array(src_p1.length);
        }
        result_33557321 = dest_p0;
        for (var i = 0; i < src_p1.length; ++i) {
          result_33557321[i] = nimCopy(result_33557321[i], src_p1[i], ti_p2.base);
        }
      }
    
      break;
    case 28:
            if (src_p1 !== null) {
        result_33557321 = src_p1.slice(0);
      }
    
      break;
    default: 
      result_33557321 = src_p1;
      break;
    }

  return result_33557321;

}

function mnewString(len_p0) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; i++) {result[i] = 0;}
    return result;
  

  
}

function addInt(a_p0, b_p1) {
        var result = a_p0 + b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_p0, a_p1, b_p2) {
  var result_33557361 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557361 = i_p0;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557361;

}

function chckIndx(i_p0, a_p1, b_p2) {
  var result_33557356 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557356 = i_p0;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_p0, a_p1, b_p2);
    }
    
  };

  return result_33557356;

}

function cstrToNimstr(c_p0) {
      var ln = c_p0.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_p0.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_p0.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_p0) {
  var result_33556910 = null;

    var res_33556964 = newSeq__system_u2507((s_p0).length);
    var i_33556965 = 0;
    var j_33556966 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556965 < (s_p0).length)) break Label2;
          var c_33556967 = s_p0[i_33556965];
          if ((c_33556967 < 128)) {
          res_33556964[j_33556966] = String.fromCharCode(c_33556967);
          i_33556965 += 1;
          }
          else {
            var helper_33556993 = newSeq__system_u2507(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556994 = c_33556967.toString(16);
                  if ((((code_33556994) == null ? 0 : (code_33556994).length) == 1)) {
                  helper_33556993.push("%0");;
                  }
                  else {
                  helper_33556993.push("%");;
                  }
                  
                  helper_33556993.push(code_33556994);;
                  i_33556965 += 1;
                  if ((((s_p0).length <= i_33556965) || (s_p0[i_33556965] < 128))) {
                  break Label3;
                  }
                  
                  c_33556967 = s_p0[i_33556965];
                }
            };
++excHandler;
            try {
            res_33556964[j_33556966] = decodeURIComponent(helper_33556993.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556964[j_33556966] = helper_33556993.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556966 += 1;
        }
    };
    if (res_33556964.length < j_33556966) { for (var i = res_33556964.length ; i < j_33556966 ; ++i) res_33556964.push(null); }
               else { res_33556964.length = j_33556966; };
    result_33556910 = res_33556964.join("");

  return result_33556910;

}

function raiseException(e_p0, ename_p1) {
    e_p0.name = ename_p1;
    if ((excHandler == 0)) {
    unhandledException(e_p0);
    }
    
    e_p0.trace = nimCopy(null, rawWriteStackTrace__system_u2180(), NTI33554449);
    throw e_p0;

  
}
var ConstSet2 = setConstr(false);

function raiseFieldError2(f_p0, discVal_p1) {
    raiseException({message: (f_p0).concat(discVal_p1,[39]), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function makeNimstrLit(c_p0) {
      var result = [];
  for (var i = 0; i < c_p0.length; ++i) {
    result[i] = c_p0.charCodeAt(i);
  }
  return result;
  

  
}

function nimBoolToStr(x_p0) {
  var result_33556445 = [];

    if (x_p0) {
    result_33556445 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556445 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556445;

}

function reprDiscriminant(e_p0, typ_p1) {
    var Temporary1;

  var result_33557664 = [];

  var F = {procname: "system.reprDiscriminant", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/repr_impl.nim", line: 0};
  framePtr = F;
    F.line = 12;
    F.filename = "repr_impl.nim";
    F.line = 12;
    switch (typ_p1.kind) {
    case 14:
      Temporary1 = reprEnum(e_p0, typ_p1);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_p0 == 0)));
      break;
    default: 
      Temporary1 = HEX24__systemZdollars_u8(e_p0);
      break;
    }
    result_33557664 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_33557664;

}
var ConstSet3 = setConstr(true);

function subInt(a_p0, b_p1) {
        var result = a_p0 - b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_p0, b_p1) {
        if (b_p1 == 0) raiseDivByZero();
    if (b_p1 == -1 && a_p0 == 2147483647) raiseOverflow();
    return Math.trunc(a_p0 / b_p1);
  

  
}
var ConstSet4 = setConstr(true);
var ConstSet5 = setConstr(false);

function nimMax(a_p0, b_p1) {
    var Temporary1;

  var result_33557148 = 0;

  BeforeRet: {
    if ((b_p1 <= a_p0)) {
    Temporary1 = a_p0;
    }
    else {
    Temporary1 = b_p1;
    }
    
    result_33557148 = Temporary1;
    break BeforeRet;
  };

  return result_33557148;

}

function nimMin(a_p0, b_p1) {
    var Temporary1;

  var result_33557144 = 0;

  BeforeRet: {
    if ((a_p0 <= b_p1)) {
    Temporary1 = a_p0;
    }
    else {
    Temporary1 = b_p1;
    }
    
    result_33557144 = Temporary1;
    break BeforeRet;
  };

  return result_33557144;

}
var ConstSet6 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet7 = setConstr([97, 122], [65, 90], [48, 57], 95);

function addChar(x_p0, c_p1) {
    x_p0.push(c_p1);

  
}
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr(101, 69);
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr([48, 57]);

function nimParseBiggestFloat(s_p0, number_p1, number_p1_Idx) {
    var Temporary1;

  var result_33557484 = 0;

  var F = {procname: "system.nimParseBiggestFloat", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/jssys.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 705;
    F.filename = "jssys.nim";
    var sign_33557485 = false;
    F.line = 706;
    var i_33557486 = 0;
    if ((s_p0[i_33557486] == 43)) {
    F.line = 707;
    i_33557486 += 1;
    }
    else {
    if ((s_p0[i_33557486] == 45)) {
    F.line = 709;
    sign_33557485 = true;
    F.line = 710;
    i_33557486 += 1;
    }
    }
    if (((s_p0[i_33557486] == 78) || (s_p0[i_33557486] == 110))) {
    if (((s_p0[(i_33557486 + 1)] == 65) || (s_p0[(i_33557486 + 1)] == 97))) {
    if (((s_p0[(i_33557486 + 2)] == 78) || (s_p0[(i_33557486 + 2)] == 110))) {
    if (!((ConstSet6[s_p0[(i_33557486 + 3)]] != undefined))) {
    F.line = 715;
    number_p1[number_p1_Idx] = NaN;
    F.line = 716;
    result_33557484 = (i_33557486 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    F.line = 717;
    result_33557484 = 0;
    break BeforeRet;
    }
    
    if (((s_p0[i_33557486] == 73) || (s_p0[i_33557486] == 105))) {
    if (((s_p0[(i_33557486 + 1)] == 78) || (s_p0[(i_33557486 + 1)] == 110))) {
    if (((s_p0[(i_33557486 + 2)] == 70) || (s_p0[(i_33557486 + 2)] == 102))) {
    if (!((ConstSet7[s_p0[(i_33557486 + 3)]] != undefined))) {
    F.line = 722;
    if (sign_33557485) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_p1[number_p1_Idx] = Temporary1;
    F.line = 723;
    result_33557484 = (i_33557486 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    F.line = 724;
    result_33557484 = 0;
    break BeforeRet;
    }
    
    F.line = 726;
    var buf_33557505 = [];
    if (sign_33557485) {
    F.line = 729;
    addChar(buf_33557505, 45);;
    }
    
    Label2: {
      F.line = 735;
        Label3: while (true) {
        if (!(ConstSet8[s_p0[i_33557486]] != undefined)) break Label3;
          F.line = 736;
          addChar(buf_33557505, s_p0[i_33557486]);;
          F.line = 737;
          i_33557486 += 1;
          Label4: {
            F.line = 738;
              Label5: while (true) {
              if (!(s_p0[i_33557486] == 95)) break Label5;
                F.line = 734;
                i_33557486 += 1;
              }
          };
        }
    };
    if ((s_p0[i_33557486] == 46)) {
    F.line = 731;
    addChar(buf_33557505, s_p0[i_33557486]);;
    F.line = 740;
    i_33557486 += 1;
    Label6: {
      F.line = 741;
        Label7: while (true) {
        if (!(ConstSet9[s_p0[i_33557486]] != undefined)) break Label7;
          F.line = 731;
          addChar(buf_33557505, s_p0[i_33557486]);;
          F.line = 742;
          i_33557486 += 1;
          Label8: {
            F.line = 743;
              Label9: while (true) {
              if (!(s_p0[i_33557486] == 95)) break Label9;
                F.line = 734;
                i_33557486 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557505).length == (sign_33557485 ? 1 : 0))) {
    F.line = 745;
    result_33557484 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet10[s_p0[i_33557486]] != undefined)) {
    F.line = 731;
    addChar(buf_33557505, s_p0[i_33557486]);;
    F.line = 747;
    i_33557486 += 1;
    if ((s_p0[i_33557486] == 43)) {
    F.line = 748;
    i_33557486 += 1;
    }
    else {
    if ((s_p0[i_33557486] == 45)) {
    F.line = 731;
    addChar(buf_33557505, s_p0[i_33557486]);;
    F.line = 749;
    i_33557486 += 1;
    }
    }
    if (!((ConstSet11[s_p0[i_33557486]] != undefined))) {
    F.line = 750;
    result_33557484 = 0;
    break BeforeRet;
    }
    
    Label10: {
      F.line = 751;
        Label11: while (true) {
        if (!(ConstSet12[s_p0[i_33557486]] != undefined)) break Label11;
          F.line = 731;
          addChar(buf_33557505, s_p0[i_33557486]);;
          F.line = 752;
          i_33557486 += 1;
          Label12: {
            F.line = 753;
              Label13: while (true) {
              if (!(s_p0[i_33557486] == 95)) break Label13;
                F.line = 734;
                i_33557486 += 1;
              }
          };
        }
    };
    }
    
    F.line = 754;
    number_p1[number_p1_Idx] = parseFloatNative__system_u3030(buf_33557505);
    F.line = 755;
    result_33557484 = i_33557486;
  };
  framePtr = F.prev;

  return result_33557484;

}
var ConstSet13 = setConstr(32, 9, 11, 13, 10, 12);

function isObj(obj_p0, subclass_p1) {
  var result_33557434 = false;

  BeforeRet: {
    var x_33557435 = obj_p0;
    if ((x_33557435 == subclass_p1)) {
    result_33557434 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557435 == subclass_p1))) break Label2;
          if ((x_33557435 == null)) {
          result_33557434 = false;
          break BeforeRet;
          }
          
          x_33557435 = x_33557435.base;
        }
    };
    result_33557434 = true;
    break BeforeRet;
  };

  return result_33557434;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException__system_u2017()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet14 = setConstr(false);
var ConstSet15 = setConstr(true);
var ConstSet16 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet17 = setConstr(false);
var ConstSet18 = setConstr(true);
var ConstSet19 = setConstr(false);
var ConstSet20 = setConstr(true);
var F = {procname: "module macros", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osseps", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/osseps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osseps", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/osseps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pathnorm", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/pathnorm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pathnorm", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/pathnorm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oserrors", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/oserrors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oserrors", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/oserrors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module staticos", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/staticos.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module staticos", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/staticos.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oscommon", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/oscommon.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oscommon", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/oscommon.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ospaths2", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/ospaths2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ospaths2", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/ospaths2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ossymlinks", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/ossymlinks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ossymlinks", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/ossymlinks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osfiles", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/osfiles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osfiles", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/osfiles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osdirs", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/osdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osdirs", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/osdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module envvars", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/envvars.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module envvars", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/envvars.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osappdirs", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/osappdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osappdirs", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/osappdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module cmdline", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/cmdline.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module cmdline", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/cmdline.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module os", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/os.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module os", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/os.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseopt", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/parseopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseopt", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/parseopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module results", prev: framePtr, filename: "/home/issa/.nimble/pkgs/results-0.5.1/results.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module results", prev: framePtr, filename: "/home/issa/.nimble/pkgs/results-0.5.1/results.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function add__system_u1942(x_p0, x_p0_Idx, y_p1) {
          if (x_p0[x_p0_Idx] === null) { x_p0[x_p0_Idx] = []; }
      var off = x_p0[x_p0_Idx].length;
      x_p0[x_p0_Idx].length += y_p1.length;
      for (var i = 0; i < y_p1.length; ++i) {
        x_p0[x_p0_Idx][off+i] = y_p1.charCodeAt(i);
      }
    

  
}

function isFatPointer__system_u2869(ti_p0) {
  var result_33557303 = false;

  BeforeRet: {
    result_33557303 = !((ConstSet1[ti_p0.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557303;

}

function nimCopyAux(dest_p0, src_p1, n_p2) {
    switch (n_p2.kind) {
    case 0:
      break;
    case 1:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_p2.sons.length; i++) {
      nimCopyAux(dest_p0, src_p1, n_p2.sons[i]);
    }
    
      break;
    case 3:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
      for (var i = 0; i < n_p2.sons.length; ++i) {
        nimCopyAux(dest_p0, src_p1, n_p2.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_p0) {
        if (a_p0 > 2147483647 || a_p0 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_p0, a_p1, b_p2) {
    var Temporary1;

    if ((b_p2 < a_p1)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32]).concat(HEX24__systemZdollars_u8(i_p0),[32,110,111,116,32,105,110,32],HEX24__systemZdollars_u8(a_p1),[32,46,46,32],HEX24__systemZdollars_u8(b_p2));
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, start_p2, n_p3) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_p0[result_p0_Idx]).length;
    F.line = 45;
    if (result_p0[result_p0_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_p3), 0, 2147483647), Temporary1)) { for (var i = result_p0[result_p0_Idx].length; i < Temporary1; ++i) result_p0[result_p0_Idx].push(0); }
         else {result_p0[result_p0_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536872016 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_536872016 < n_p3)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_536872016;
            F.line = 47;
            result_p0[result_p0_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_p0[result_p0_Idx]).length - 1)] = x_p1.charCodeAt(chckIndx(addInt(start_p2, iHEX60gensym4_301990110), 0, (x_p1).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536872016 = addInt(i_536872016, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, 0, ((x_p1) == null ? 0 : (x_p1).length));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u241(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, BigInt(x_p1));
  framePtr = F.prev;

  
}

function HEX24__systemZdollars_u8(x_p0) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "dollars.nim";
    result_369098762[0] = nimCopy(null, [], NTI33554449);
    F.line = 20;
    addInt__stdZprivateZdigitsutils_u241(result_369098762, 0, x_p0);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace__system_u2084(f_p0) {
  var result_33556518 = [[]];

    var it_33556526 = f_p0;
    var i_33556527 = 0;
    var total_33556528 = 0;
    var tempFrames_33556529 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555836);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556526 == null)) && (i_33556527 <= 63))) break Label2;
          tempFrames_33556529[i_33556527].Field0 = it_33556526.procname;
          tempFrames_33556529[i_33556527].Field1 = it_33556526.line;
          tempFrames_33556529[i_33556527].Field2 = it_33556526.filename;
          i_33556527 += 1;
          total_33556528 += 1;
          it_33556526 = it_33556526.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556526 == null))) break Label4;
          total_33556528 += 1;
          it_33556526 = it_33556526.prev;
        }
    };
    result_33556518[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556528 == i_33556527))) {
    result_33556518[0].push.apply(result_33556518[0], [40]);;
    result_33556518[0].push.apply(result_33556518[0], HEX24__systemZdollars_u8((total_33556528 - i_33556527)));;
    result_33556518[0].push.apply(result_33556518[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556562 = 0;
      var colontmp__536872008 = 0;
      colontmp__536872008 = (i_33556527 - 1);
      var res_536872010 = colontmp__536872008;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_536872010)) break Label7;
            j_33556562 = res_536872010;
            result_33556518[0].push.apply(result_33556518[0], cstrToNimstr(tempFrames_33556529[j_33556562].Field2));;
            if ((0 < tempFrames_33556529[j_33556562].Field1)) {
            result_33556518[0].push.apply(result_33556518[0], [40]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556518, 0, tempFrames_33556529[j_33556562].Field1);
            if (false) {
            result_33556518[0].push.apply(result_33556518[0], [44,32]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556518, 0, 0);
            }
            
            result_33556518[0].push.apply(result_33556518[0], [41]);;
            }
            
            result_33556518[0].push.apply(result_33556518[0], [32,97,116,32]);;
            add__system_u1942(result_33556518, 0, tempFrames_33556529[j_33556562].Field0);
            result_33556518[0].push.apply(result_33556518[0], [10]);;
            res_536872010 -= 1;
          }
      };
    };

  return result_33556518[0];

}

function rawWriteStackTrace__system_u2180() {
  var result_33556613 = [];

    if (!((framePtr == null))) {
    result_33556613 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10]).concat(auxWriteStackTrace__system_u2084(framePtr)), NTI33554449);
    }
    else {
      result_33556613 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556613;

}

function newSeq__system_u2507(len_p0) {
  var result_33556943 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 653;
    F.filename = "system.nim";
    result_33556943 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_33556943[i] = null; }  framePtr = F.prev;

  return result_33556943;

}

function unhandledException(e_p0) {
    var buf_33556658 = [[]];
    if (!(((e_p0.message).length == 0))) {
    buf_33556658[0].push.apply(buf_33556658[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556658[0].push.apply(buf_33556658[0], e_p0.message);;
    }
    else {
    buf_33556658[0].push.apply(buf_33556658[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556658[0].push.apply(buf_33556658[0], [32,91]);;
    add__system_u1942(buf_33556658, 0, e_p0.name);
    buf_33556658[0].push.apply(buf_33556658[0], [93,10]);;
    buf_33556658[0].push.apply(buf_33556658[0], rawWriteStackTrace__system_u2180());;
    var cbuf_33556659 = toJSStr(buf_33556658[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556659);
  }
  else {
    throw cbuf_33556659;
  }
  

  
}

function raiseResultDefect__find95tax_u784(m_p0, v_p1) {
  var F = {procname: "raiseResultDefect.raiseResultDefect", prev: framePtr, filename: "/home/issa/.nimble/pkgs/results-0.5.1/results.nim", line: 0};
  framePtr = F;
    F.line = 433;
    F.filename = "results.nim";
    raiseException({message: (m_p0).concat([58,32],v_p1), m_type: NTI1224736772, parent: null, name: null, trace: [], up: null}, "ResultDefect");
  framePtr = F.prev;

  
}

function reprEnum(e_p0, typ_p1) {
  var result_33557626 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557627 = false;
    F.line = 31;
    var item_33557628 = typ_p1.node.sons[e_p0];
    F.line = 32;
    tmp_33557627 = item_33557628 !== undefined;
    if (tmp_33557627) {
    F.line = 34;
    result_33557626 = nimCopy(null, makeNimstrLit(item_33557628.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557626 = nimCopy(null, (HEX24__systemZdollars_u8(e_p0)).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41]), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557626;

}

function value__find95tax_u777(self_p0) {
      var Temporary1;
      var Temporary2;

  var result_536871693 = [];

  var F = {procname: "value.value", prev: framePtr, filename: "/home/issa/.nimble/pkgs/results-0.5.1/results.nim", line: 0};
  framePtr = F;
    F.line = 874;
    F.filename = "results.nim";
    switch (self_p0.oResultPrivate) {
    case false:
      F.line = 445;
      var Temporary1 = self_p0;
      if (ConstSet2[Temporary1.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'eResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary1.oResultPrivate, NTI33554466)); }
      raiseResultDefect__find95tax_u784([84,114,121,105,110,103,32,116,111,32,97,99,99,101,115,115,32,118,97,108,117,101,32,119,105,116,104,32,101,114,114,32,82,101,115,117,108,116], Temporary1.eResultPrivate);
      break;
    case true:
      F.line = 879;
      var Temporary2 = self_p0;
      if (ConstSet3[Temporary2.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'vResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary2.oResultPrivate, NTI33554466)); }
      result_536871693 = Temporary2["vResultPrivate"];
      break;
    default: 
      break;
    }
  framePtr = F.prev;

  return result_536871693;

}

function validateUtf8__pureZunicode_u336(s_p0) {
  var result_721420626 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "unicode.nim";
    var i_721420627 = 0;
    F.line = 185;
    var L_721420631 = (s_p0).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_721420627 < L_721420631)) break Label2;
          if ((s_p0[chckIndx(i_721420627, 0, (s_p0).length - 1)] <= 127)) {
          F.line = 188;
          i_721420627 = addInt(i_721420627, 1);
          }
          else {
          if (((s_p0[chckIndx(i_721420627, 0, (s_p0).length - 1)] >>> 5) == 6)) {
          if ((s_p0[chckIndx(i_721420627, 0, (s_p0).length - 1)] < 194)) {
          F.line = 190;
          result_721420626 = i_721420627;
          break BeforeRet;
          }
          
          if (((addInt(i_721420627, 1) < L_721420631) && ((s_p0[chckIndx(addInt(i_721420627, 1), 0, (s_p0).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_721420627 = addInt(i_721420627, 2);
          }
          else {
            F.line = 192;
            result_721420626 = i_721420627;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_p0[chckIndx(i_721420627, 0, (s_p0).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_721420627, 2) < L_721420631) && ((s_p0[chckIndx(addInt(i_721420627, 1), 0, (s_p0).length - 1)] >>> 6) == 2)) && ((s_p0[chckIndx(addInt(i_721420627, 2), 0, (s_p0).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_721420627 = addInt(i_721420627, 3);
          }
          else {
            F.line = 196;
            result_721420626 = i_721420627;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_p0[chckIndx(i_721420627, 0, (s_p0).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_721420627, 3) < L_721420631) && ((s_p0[chckIndx(addInt(i_721420627, 1), 0, (s_p0).length - 1)] >>> 6) == 2)) && ((s_p0[chckIndx(addInt(i_721420627, 2), 0, (s_p0).length - 1)] >>> 6) == 2)) && ((s_p0[chckIndx(addInt(i_721420627, 3), 0, (s_p0).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_721420627 = addInt(i_721420627, 4);
          }
          else {
            F.line = 202;
            result_721420626 = i_721420627;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_721420626 = i_721420627;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_721420626 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_721420626;

}

function validateUtf8__pureZunicode_u7390(s_p0) {
  var result_721427680 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1199;
    F.filename = "unicode.nim";
    result_721427680 = validateUtf8__pureZunicode_u336((s_p0.slice(0, (s_p0).length - 1 + 1)));
  framePtr = F.prev;

  return result_721427680;

}

function nucruneLen(s_p0) {
  var result_721420317 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "unicode.nim";
    result_721420317 = 0;
    F.line = 53;
    var i_721420318 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_721420318 < (s_p0).length)) break Label2;
          if ((s_p0[chckIndx(i_721420318, 0, (s_p0).length - 1)] <= 127)) {
          F.line = 55;
          i_721420318 = addInt(i_721420318, 1);
          }
          else {
          if (((s_p0[chckIndx(i_721420318, 0, (s_p0).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_721420318 = addInt(i_721420318, 2);
          }
          else {
          if (((s_p0[chckIndx(i_721420318, 0, (s_p0).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_721420318 = addInt(i_721420318, 3);
          }
          else {
          if (((s_p0[chckIndx(i_721420318, 0, (s_p0).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_721420318 = addInt(i_721420318, 4);
          }
          else {
          if (((s_p0[chckIndx(i_721420318, 0, (s_p0).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_721420318 = addInt(i_721420318, 5);
          }
          else {
          if (((s_p0[chckIndx(i_721420318, 0, (s_p0).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_721420318 = addInt(i_721420318, 6);
          }
          else {
            F.line = 61;
          i_721420318 = addInt(i_721420318, 1);
          }
          }}}}}
          F.line = 62;
          result_721420317 = addInt(result_721420317, 1);
        }
    };
  framePtr = F.prev;

  return result_721420317;

}

function runeLen__pureZunicode_u7218(s_p0) {
  var result_721427508 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1166;
    F.filename = "unicode.nim";
    result_721427508 = nucruneLen((s_p0.slice(0, (s_p0).length - 1 + 1)));
  framePtr = F.prev;

  return result_721427508;

}

function nsuRepeatChar(c_p0, count_p1) {
  var result_771753059 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1350;
    F.filename = "strutils.nim";
    result_771753059 = nimCopy(null, mnewString(count_p1), NTI33554449);
    Label1: {
      F.line = 1351;
      var i_771753064 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__536872023 = 0;
      F.line = 1351;
      F.filename = "strutils.nim";
      colontmp__536872023 = subInt(count_p1, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_536872024 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_536872024 <= colontmp__536872023)) break Label3;
            F.line = 1351;
            F.filename = "strutils.nim";
            i_771753064 = res_536872024;
            F.line = 1351;
            result_771753059[chckIndx(i_771753064, 0, (result_771753059).length - 1)] = c_p0;
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_536872024 = addInt(res_536872024, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_771753059;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function alignString__pureZstrformat_u20(s_p0, minimumWidth_p1, align_p2, fill_p3) {
      var Temporary1;

  var result_671088665 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_p1 == 0)) {
    F.line = 344;
    F.filename = "strformat.nim";
    result_671088665 = nimCopy(null, s_p0, NTI33554449);
    }
    else {
      F.line = 346;
      if ((validateUtf8__pureZunicode_u7390(s_p0) == (-1))) {
      Temporary1 = runeLen__pureZunicode_u7218(s_p0);
      }
      else {
      Temporary1 = (s_p0).length;
      }
      
      var sRuneLen_671088666 = Temporary1;
      F.line = 347;
      var toFill_671088667 = subInt(minimumWidth_p1, sRuneLen_671088666);
      if ((toFill_671088667 <= 0)) {
      F.line = 349;
      result_671088665 = nimCopy(null, s_p0, NTI33554449);
      }
      else {
      if (((align_p2 == 60) || (align_p2 == 0))) {
      F.line = 351;
      result_671088665 = nimCopy(null, (s_p0).concat(nsuRepeatChar(fill_p3, chckRange(toFill_671088667, 0, 2147483647))), NTI33554449);
      }
      else {
      if ((align_p2 == 94)) {
      F.line = 353;
      var half_671088668 = divInt(toFill_671088667, 2);
      F.line = 354;
      result_671088665 = nimCopy(null, (nsuRepeatChar(fill_p3, chckRange(half_671088668, 0, 2147483647))).concat(s_p0,nsuRepeatChar(fill_p3, chckRange(subInt(toFill_671088667, half_671088668), 0, 2147483647))), NTI33554449);
      }
      else {
        F.line = 356;
        result_671088665 = nimCopy(null, (nsuRepeatChar(fill_p3, chckRange(toFill_671088667, 0, 2147483647))).concat(s_p0), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_671088665;

}

function formatValue__find95tax_u838(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 600;
    F.filename = "strformat.nim";
    var value_536871762 = nimCopy(null, value_p1, NTI33554449);
    F.line = 611;
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], alignString__pureZstrformat_u20(value_536871762, 0, 0, 32));;
  framePtr = F.prev;

  
}

function nimFloatToString__stdZformatfloat_u130(a_p0) {
  var result_385876100 = null;

  var F = {procname: "formatfloat.nimFloatToString", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/formatfloat.nim", line: 0};
  framePtr = F;
    F.line = 107;
    F.filename = "formatfloat.nim";
          function nimOnlyDigitsOrMinus(n) {
        return n.toString().match(/^-?\d+$/);
      }
      if (Number.isSafeInteger(a_p0))
        result_385876100 = a_p0 === 0 && 1 / a_p0 < 0 ? "-0.0" : a_p0+".0";
      else {
        result_385876100 = a_p0+"";
        if(nimOnlyDigitsOrMinus(result_385876100)){
          result_385876100 = a_p0+".0";
        }
      }
    
  framePtr = F.prev;

  return result_385876100;

}

function addFloat__system_u3169(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "addFloat.addFloat", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/formatfloat.nim", line: 0};
  framePtr = F;
    F.line = 137;
    F.filename = "formatfloat.nim";
    add__system_u1942(result_p0, result_p0_Idx, nimFloatToString__stdZformatfloat_u130(x_p1));
  framePtr = F.prev;

  
}

function HEX24__system_u3165(x_p0) {
  var result_33557600 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 14;
    F.filename = "dollars.nim";
    result_33557600[0] = nimCopy(null, [], NTI33554449);
    F.line = 15;
    addFloat__system_u3169(result_33557600, 0, x_p0);
  framePtr = F.prev;

  return result_33557600[0];

}

function formatValue__find95tax_u113(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 574;
    F.filename = "strformat.nim";
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], HEX24__system_u3165(value_p1));;
  framePtr = F.prev;

  
}

function HEX24__find95tax_u96(t_p0) {
  var result_536871010 = [];

  var F = {procname: "find_tax.$", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 30;
    F.filename = "find_tax.nim";
    Label1: {
      F.line = 30;
      var fmtRes_536871019 = [mnewString(0)];
      F.line = 30;
      fmtRes_536871019[0].push.apply(fmtRes_536871019[0], [40,36]);;
      F.line = 30;
      formatValue__find95tax_u113(fmtRes_536871019, 0, t_p0.value);
      F.line = 30;
      fmtRes_536871019[0].push.apply(fmtRes_536871019[0], [32,119,105,116,104,32,116,97,120,32,120]);;
      F.line = 30;
      formatValue__find95tax_u113(fmtRes_536871019, 0, t_p0.tax);
      F.line = 30;
      fmtRes_536871019[0].push.apply(fmtRes_536871019[0], [41]);;
    };
    result_536871010 = nimCopy(null, fmtRes_536871019[0], NTI33554449);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536871010;

}

function join__find95tax_u200(a_p0, sep_p1) {
  var result_536871116 = [];

  var F = {procname: "join.join", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1887;
    F.filename = "strutils.nim";
    result_536871116 = nimCopy(null, [], NTI33554449);
    Label1: {
      F.line = 1888;
      var i_536871150 = 0;
      F.line = 1888;
      var x_536871151 = ({value: 0.0, tax: 0.0});
      F.line = 148;
      F.filename = "iterators.nim";
      var i_536872028 = 0;
      Label2: {
        F.line = 149;
          Label3: while (true) {
          if (!(i_536872028 < (a_p0).length)) break Label3;
            F.line = 1888;
            F.filename = "strutils.nim";
            i_536871150 = i_536872028;
            F.line = 1888;
            x_536871151 = nimCopy(x_536871151, a_p0[chckIndx(i_536872028, 0, (a_p0).length - 1)], NTI536870915);
            if ((0 < i_536871150)) {
            F.line = 1890;
            result_536871116.push.apply(result_536871116, sep_p1);;
            }
            
            F.line = 1891;
            result_536871116.push.apply(result_536871116, HEX24__find95tax_u96(x_536871151));;
            F.line = 13;
            F.filename = "iterators.nim";
            i_536872028 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_536871116;

}

function HEX24__find95tax_u197(hist_p0) {
  var result_536871111 = [];

  var F = {procname: "find_tax.$", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
    F.line = 42;
    F.filename = "find_tax.nim";
    result_536871111 = nimCopy(null, join__find95tax_u200(hist_p0.hist, [44,32]), NTI33554449);
  framePtr = F.prev;

  return result_536871111;

}

function formatValue__find95tax_u832(result_p0, result_p0_Idx, value_p1) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "strformat.nim";
    formatValue__find95tax_u838(result_p0, result_p0_Idx, HEX24__find95tax_u197(value_p1));
  framePtr = F.prev;

  
}

function sysFatal__stdZassertions_u44(message_p1) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_p1, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert__stdZassertions_u42(msg_p0) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal__stdZassertions_u44(msg_p0);
  framePtr = F.prev;

  
}

function failedAssertImpl__stdZassertions_u84(msg_p0) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert__stdZassertions_u42(msg_p0);
  framePtr = F.prev;

  
}

function addQuoted__find95tax_u1039(s_p0, s_p0_Idx, x_p1) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2660;
    F.filename = "system.nim";
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__find95tax_u197(x_p1));;
  framePtr = F.prev;

  
}

function addQuoted__find95tax_u1053(s_p0, s_p0_Idx, x_p1) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2660;
    F.filename = "system.nim";
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], nimBoolToStr(x_p1));;
  framePtr = F.prev;

  
}

function addQuoted__find95tax_u1070(s_p0, s_p0_Idx, x_p1) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2656;
    F.filename = "system.nim";
    addFloat__system_u3169(s_p0, s_p0_Idx, x_p1);
  framePtr = F.prev;

  
}

function HEX24__find95tax_u1013(x_p0) {
  var result_536871928 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/std/objectdollar.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "miscdollars.nim";
    result_536871928[0] = nimCopy(null, [40], NTI33554449);
    F.line = 21;
    var countHEX60gensym41_536871939 = 0;
    if (true) {
    if ((0 < countHEX60gensym41_536871939)) {
    F.line = 23;
    result_536871928[0].push.apply(result_536871928[0], [44,32]);;
    }
    
    F.line = 25;
    result_536871928[0].push.apply(result_536871928[0], [104,105,115,116]);;
    F.line = 26;
    result_536871928[0].push.apply(result_536871928[0], [58,32]);;
    F.line = 27;
    countHEX60gensym41_536871939 += 1;
    F.line = 33;
    addQuoted__find95tax_u1039(result_536871928, 0, x_p0.hist);
    }
    
    if (true) {
    if ((0 < countHEX60gensym41_536871939)) {
    F.line = 23;
    result_536871928[0].push.apply(result_536871928[0], [44,32]);;
    }
    
    F.line = 25;
    result_536871928[0].push.apply(result_536871928[0], [114,111,117,110,100,95,98,101,102,111,114,101,95,115,117,109,109,105,110,103]);;
    F.line = 26;
    result_536871928[0].push.apply(result_536871928[0], [58,32]);;
    F.line = 27;
    countHEX60gensym41_536871939 += 1;
    F.line = 33;
    addQuoted__find95tax_u1053(result_536871928, 0, x_p0.round_before_summing);
    }
    
    if (true) {
    if ((0 < countHEX60gensym41_536871939)) {
    F.line = 23;
    result_536871928[0].push.apply(result_536871928[0], [44,32]);;
    }
    
    F.line = 25;
    result_536871928[0].push.apply(result_536871928[0], [115,117,109]);;
    F.line = 26;
    result_536871928[0].push.apply(result_536871928[0], [58,32]);;
    F.line = 27;
    countHEX60gensym41_536871939 += 1;
    F.line = 33;
    addQuoted__find95tax_u1070(result_536871928, 0, x_p0.sum);
    }
    
    F.line = 39;
    result_536871928[0].push.apply(result_536871928[0], [41]);;
  framePtr = F.prev;

  return result_536871928[0];

}

function addQuoted__find95tax_u1007(s_p0, s_p0_Idx, x_p1) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2660;
    F.filename = "system.nim";
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__find95tax_u1013(x_p1));;
  framePtr = F.prev;

  
}

function collectionToString__find95tax_u992(x_p0, prefix_p1, separator_p2, suffix_p3) {
  var result_536871910 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 97;
    F.filename = "dollars.nim";
    result_536871910[0] = nimCopy(null, prefix_p1, NTI33554449);
    F.line = 98;
    var firstElement_536871911 = true;
    Label1: {
      F.line = 99;
      var value_536871915 = ({hist: ({hist: []}), round_before_summing: false, sum: 0.0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_536872032 = 0;
      F.line = 250;
      var L_536872033 = (x_p0).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_536872032 < L_536872033)) break Label3;
            F.line = 99;
            F.filename = "dollars.nim";
            value_536871915 = x_p0[i_536872032];
            if (firstElement_536871911) {
            F.line = 101;
            firstElement_536871911 = false;
            }
            else {
              F.line = 103;
            result_536871910[0].push.apply(result_536871910[0], separator_p2);;
            }
            
            F.line = 112;
            addQuoted__find95tax_u1007(result_536871910, 0, value_536871915);
            F.line = 13;
            F.filename = "iterators.nim";
            i_536872032 += 1;
            if (!(((x_p0).length == L_536872033))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 113;
    F.filename = "dollars.nim";
    result_536871910[0].push.apply(result_536871910[0], suffix_p3);;
  framePtr = F.prev;

  return result_536871910[0];

}

function HEX24__find95tax_u988(x_p0) {
  var result_536871903 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 124;
    F.filename = "dollars.nim";
    result_536871903 = nimCopy(null, collectionToString__find95tax_u992(x_p0, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_536871903;

}

function raiseResultDefect__find95tax_u876(m_p0, v_p1) {
  var F = {procname: "raiseResultDefect.raiseResultDefect", prev: framePtr, filename: "/home/issa/.nimble/pkgs/results-0.5.1/results.nim", line: 0};
  framePtr = F;
    F.line = 433;
    F.filename = "results.nim";
    raiseException({message: (m_p0).concat([58,32],HEX24__find95tax_u988(v_p1)), m_type: NTI1224736772, parent: null, name: null, trace: [], up: null}, "ResultDefect");
  framePtr = F.prev;

  
}

function error__find95tax_u871(self_p0) {
      var Temporary1;
      var Temporary2;

  var result_536871787 = [];

  var F = {procname: "error.error", prev: framePtr, filename: "/home/issa/.nimble/pkgs/results-0.5.1/results.nim", line: 0};
  framePtr = F;
    F.line = 1011;
    F.filename = "results.nim";
    switch (self_p0.oResultPrivate) {
    case true:
      F.line = 1014;
      var Temporary1 = self_p0;
      if (ConstSet4[Temporary1.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'vResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary1.oResultPrivate, NTI33554466)); }
      raiseResultDefect__find95tax_u876([84,114,121,105,110,103,32,116,111,32,97,99,99,101,115,115,32,101,114,114,111,114,32,119,104,101,110,32,118,97,108,117,101,32,105,115,32,115,101,116], Temporary1.vResultPrivate);
      break;
    case false:
      F.line = 1019;
      var Temporary2 = self_p0;
      if (ConstSet5[Temporary2.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'eResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary2.oResultPrivate, NTI33554466)); }
      result_536871787 = Temporary2["eResultPrivate"];
      break;
    default: 
      break;
    }
  framePtr = F.prev;

  return result_536871787;

}

function pack_message__find95tax_u732(calculated_p0) {
            var Temporary4;

  var result_536871648 = [];

  var F = {procname: "find_tax.pack_message", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (calculated_p0.oResultPrivate) {
    F.line = 114;
    F.filename = "find_tax.nim";
    var message_536871650 = [82,101,115,117,108,116,115,58,10];
    Label1: {
      F.line = 115;
      var res_536871738 = ({hist: ({hist: []}), round_before_summing: false, sum: 0.0});
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__536872000 = [];
      F.line = 115;
      F.filename = "find_tax.nim";
      colontmp__536872000 = value__find95tax_u777(calculated_p0);
      F.line = 249;
      F.filename = "iterators.nim";
      var i_536872002 = 0;
      F.line = 250;
      var L_536872003 = (colontmp__536872000).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_536872002 < L_536872003)) break Label3;
            F.line = 115;
            F.filename = "find_tax.nim";
            res_536871738 = colontmp__536872000[chckIndx(i_536872002, 0, (colontmp__536872000).length - 1)];
            F.line = 116;
            message_536871650.push.apply(message_536871650, [32,32,42]);;
            F.line = 117;
            if (res_536871738.round_before_summing) {
            Temporary4 = [121,101,115];
            }
            else {
            Temporary4 = [110,111];
            }
            
            message_536871650.push.apply(message_536871650, ([32,114,111,117,110,100,32,98,101,102,111,114,101,32,115,117,109,109,105,110,103,63,32]).concat(Temporary4));;
            F.line = 118;
            Label5: {
              F.line = 118;
              var fmtRes_536871743 = [mnewString(0)];
              F.line = 118;
              fmtRes_536871743[0].push.apply(fmtRes_536871743[0], [44,32]);;
              F.line = 118;
              formatValue__find95tax_u832(fmtRes_536871743, 0, res_536871738.hist);
            };
            message_536871650.push.apply(message_536871650, fmtRes_536871743[0]);;
            F.line = 119;
            Label6: {
              F.line = 119;
              var fmtRes_536871767 = [mnewString(0)];
              F.line = 119;
              fmtRes_536871767[0].push.apply(fmtRes_536871767[0], [58,32,116,111,116,97,108,32,119,97,115,32]);;
              F.line = 119;
              formatValue__find95tax_u113(fmtRes_536871767, 0, res_536871738.sum);
            };
            message_536871650.push.apply(message_536871650, fmtRes_536871767[0]);;
            F.line = 120;
            message_536871650.push.apply(message_536871650, [10]);;
            F.line = 13;
            F.filename = "iterators.nim";
            i_536872002 += 1;
            if (!(((colontmp__536872000).length == L_536872003))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 121;
    F.filename = "find_tax.nim";
    result_536871648 = nimCopy(null, message_536871650, NTI33554449);
    break BeforeRet;
    }
    else {
      F.line = 123;
      result_536871648 = nimCopy(null, ([67,111,117,108,100,32,110,111,116,32,112,97,114,115,101,32,105,110,112,117,116,58,10]).concat(error__find95tax_u871(calculated_p0)), NTI33554449);
      break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_536871648;

}

function substrEq__pureZstrutils_u255(s_p0, pos_p1, substr_p2) {
    var Temporary1;

  var result_771752195 = false;

  var F = {procname: "strutils.substrEq", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "strutils.nim";
    F.line = 370;
    var length_771752196 = (substr_p2).length;
    if ((0 < length_771752196)) {
    F.line = 372;
    var i_771752197 = 0;
    Label2: {
      F.line = 373;
        Label3: while (true) {
        if (!(((i_771752197 < length_771752196) && (addInt(pos_p1, i_771752197) < (s_p0).length)) && (s_p0[chckIndx(addInt(pos_p1, i_771752197), 0, (s_p0).length - 1)] == substr_p2[chckIndx(i_771752197, 0, (substr_p2).length - 1)]))) break Label3;
          F.line = 374;
          i_771752197 = addInt(i_771752197, 1);
        }
    };
    Temporary1 = (i_771752197 == length_771752196);
    }
    else {
    Temporary1 = false;
    }
    
    result_771752195 = Temporary1;
  framePtr = F.prev;

  return result_771752195;

}

function substr__system_u3700(s_p0, first_p1, last_p2) {
  var result_33558136 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2797;
    F.filename = "system.nim";
    var first_33558137 = nimMax(first_p1, 0);
    F.line = 2798;
    var L_33558138 = nimMax(addInt(subInt(nimMin(last_p2, (s_p0).length - 1), first_33558137), 1), 0);
    F.line = 2799;
    result_33558136 = nimCopy(null, mnewString(chckRange(L_33558138, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2800;
      var i_33558143 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__536872046 = 0;
      F.line = 2800;
      F.filename = "system.nim";
      colontmp__536872046 = subInt(L_33558138, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_536872047 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_536872047 <= colontmp__536872046)) break Label3;
            F.line = 2800;
            F.filename = "system.nim";
            i_33558143 = res_536872047;
            F.line = 2801;
            result_33558136[chckIndx(i_33558143, 0, (result_33558136).length - 1)] = s_p0[chckIndx(addInt(i_33558143, first_33558137), 0, (s_p0).length - 1)];
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_536872047 = addInt(res_536872047, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558136;

}

function parseFloatNative__system_u3030(a_p0) {
  var result_33557464 = 0.0;

  var F = {procname: "system.parseFloatNative", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/jssys.nim", line: 0};
  framePtr = F;
    F.line = 694;
    F.filename = "jssys.nim";
    var str_33557465 = [];
    Label1: {
      F.line = 695;
      var x_33557479 = 0;
      F.line = 28;
      F.filename = "iterators.nim";
      var i_536872057 = 0;
      Label2: {
        F.line = 29;
          Label3: while (true) {
          if (!(i_536872057 < (a_p0).length)) break Label3;
            F.line = 695;
            F.filename = "jssys.nim";
            x_33557479 = a_p0[i_536872057];
            F.line = 696;
            addChar(str_33557465, x_33557479);;
            F.line = 13;
            F.filename = "iterators.nim";
            i_536872057 += 1;
          }
      };
    };
    F.line = 698;
    F.filename = "jssys.nim";
    var cstr_33557480 = toJSStr(str_33557465);
    F.line = 700;
      result_33557464 = Number(cstr_33557480);
  
  framePtr = F.prev;

  return result_33557464;

}

function npuParseFloat(s_p0, number_p1, number_p1_Idx) {
  var result_704643612 = 0;

  var F = {procname: "parseutils.parseFloat", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 606;
    F.filename = "parseutils.nim";
    var bf_704643613 = [0.0];
    F.line = 607;
    result_704643612 = nimParseBiggestFloat(s_p0, bf_704643613, 0);
    if (!((result_704643612 == 0))) {
    F.line = 609;
    number_p1[number_p1_Idx] = bf_704643613[0];
    }
    
  framePtr = F.prev;

  return result_704643612;

}

function parseFloat__pureZparseutils_u940(s_p0, number_p1, number_p1_Idx, start_p2) {
  var result_704644016 = 0;

  var F = {procname: "parseutils.parseFloat", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 1075;
    F.filename = "parseutils.nim";
    result_704644016 = npuParseFloat((s_p0.slice(start_p2, (s_p0).length - 1 + 1)), number_p1, number_p1_Idx);
  framePtr = F.prev;

  return result_704644016;

}

function nsuParseFloat(s_p0) {
  var result_771752814 = [0.0];

  var F = {procname: "strutils.parseFloat", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1198;
    F.filename = "strutils.nim";
    result_771752814[0] = 0.0;
    F.line = 1199;
    var L_771752815 = parseFloat__pureZparseutils_u940(s_p0, result_771752814, 0, 0);
    if ((!((L_771752815 == (s_p0).length)) || (L_771752815 == 0))) {
    F.line = 1201;
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32]).concat(s_p0), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_771752814[0];

}

function nsuStrip(s_p0, leading_p1, trailing_p2, chars_p3) {
  var result_771754477 = [];

  var F = {procname: "strutils.strip", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2962;
    F.filename = "strutils.nim";
    var first_771754478 = 0;
    F.line = 2963;
    var last_771754479 = subInt((s_p0).length, 1);
    if (leading_p1) {
    Label1: {
      F.line = 2965;
        Label2: while (true) {
        if (!((first_771754478 <= last_771754479) && (chars_p3[s_p0[chckIndx(first_771754478, 0, (s_p0).length - 1)]] != undefined))) break Label2;
          F.line = 2965;
          first_771754478 = addInt(first_771754478, 1);
        }
    };
    }
    
    if (trailing_p2) {
    Label3: {
      F.line = 2967;
        Label4: while (true) {
        if (!((first_771754478 <= last_771754479) && (chars_p3[s_p0[chckIndx(last_771754479, 0, (s_p0).length - 1)]] != undefined))) break Label4;
          F.line = 2967;
          last_771754479 = subInt(last_771754479, 1);
        }
    };
    }
    
    F.line = 2968;
    result_771754477 = nimCopy(null, substr__system_u3700(s_p0, first_771754478, last_771754479), NTI33554449);
  framePtr = F.prev;

  return result_771754477;

}

function isNimException__system_u2017() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556452 = null;

    if (isNimException__system_u2017()) {
    result_33556452 = lastJSError;
    }
    

  return result_33556452;

}

function parse_float_seq__find95tax_u549(input_p0) {
  var result_536871470 = ({oResultPrivate: false, eResultPrivate: [], vResultPrivate: []});

  var F = {procname: "find_tax.parse_float_seq", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 68;
    F.filename = "find_tax.nim";
    var res_536871475 = [];
    Label1: {
      F.line = 69;
      var x_536871476 = [];
      F.line = 535;
      F.filename = "strutils.nim";
      var sepLen_536872038 = 1;
      F.line = 389;
      var lastHEX60gensym41_536872039 = 0;
      F.line = 390;
      var splitsHEX60gensym41_536872040 = (-1);
      Label2: {
        F.line = 537;
          Label3: while (true) {
          if (!(lastHEX60gensym41_536872039 <= (input_p0).length)) break Label3;
            F.line = 393;
            var firstHEX60gensym41_536872042 = lastHEX60gensym41_536872039;
            Label4: {
              F.line = 394;
                Label5: while (true) {
                if (!((lastHEX60gensym41_536872039 < (input_p0).length) && !(substrEq__pureZstrutils_u255(input_p0, lastHEX60gensym41_536872039, [44])))) break Label5;
                  F.line = 395;
                  lastHEX60gensym41_536872039 = addInt(lastHEX60gensym41_536872039, 1);
                }
            };
            if ((splitsHEX60gensym41_536872040 == 0)) {
            F.line = 396;
            lastHEX60gensym41_536872039 = (input_p0).length;
            }
            
            F.line = 69;
            F.filename = "find_tax.nim";
            x_536871476 = substr__system_u3700(input_p0, firstHEX60gensym41_536872042, subInt(lastHEX60gensym41_536872039, 1));
            F.line = 70;
++excHandler;
            try {
            F.line = 71;
            res_536871475.push(nsuParseFloat(nsuStrip(x_536871476, true, true, ConstSet13)));;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = F;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
            F.line = 73;
            var e_536871481 = getCurrentException();
            F.line = 73;
            result_536871470 = nimCopy(result_536871470, {oResultPrivate: false, eResultPrivate: nimCopy(null, e_536871481.message, NTI33554449), vResultPrivate: []}, NTI536871265);
            break BeforeRet;
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            framePtr = F;
            }
            if ((splitsHEX60gensym41_536872040 == 0)) {
            F.line = 398;
            F.filename = "strutils.nim";
            break Label2;
            }
            
            F.line = 399;
            splitsHEX60gensym41_536872040 = subInt(splitsHEX60gensym41_536872040, 1);
            F.line = 400;
            lastHEX60gensym41_536872039 = addInt(lastHEX60gensym41_536872039, sepLen_536872038);
          }
      };
    };
    F.line = 74;
    F.filename = "find_tax.nim";
    result_536871470 = nimCopy(result_536871470, {oResultPrivate: true, vResultPrivate: nimCopy(null, res_536871475, NTI536871270), eResultPrivate: []}, NTI536871265);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536871470;

}

function parse_single_float__find95tax_u620(input_p0) {
  var result_536871541 = ({oResultPrivate: false, eResultPrivate: [], vResultPrivate: 0.0});

  var F = {procname: "find_tax.parse_single_float", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 77;
    F.filename = "find_tax.nim";
++excHandler;
    try {
    F.line = 78;
    var parsed_536871542 = nsuParseFloat(nsuStrip(input_p0, true, true, ConstSet16));
    F.line = 79;
    result_536871541 = nimCopy(result_536871541, {oResultPrivate: true, vResultPrivate: parsed_536871542, eResultPrivate: []}, NTI536871314);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    F.line = 81;
    var e_536871547 = getCurrentException();
    F.line = 81;
    result_536871541 = nimCopy(result_536871541, {oResultPrivate: false, eResultPrivate: nimCopy(null, e_536871547.message, NTI33554449), vResultPrivate: 0.0}, NTI536871314);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
  };
  framePtr = F.prev;

  return result_536871541;

}

function newHistory__find95tax_u16() {
  var result_536870929 = ({hist: []});

  var F = {procname: "find_tax.newHistory", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 22;
    F.filename = "find_tax.nim";
    result_536870929 = nimCopy(result_536870929, {hist: []}, NTI536870916);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536870929;

}

function with__find95tax_u70(hist_p0, v_p1) {
  var result_536870985 = ({hist: []});

  var F = {procname: "find_tax.with", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 25;
    F.filename = "find_tax.nim";
    var newlist_536870986 = nimCopy(null, hist_p0.hist, NTI536870918);
    F.line = 26;
    var Temporary1 = nimCopy(null, v_p1, NTI536870915);
    newlist_536870986.push(Temporary1);;
    F.line = 27;
    result_536870985 = nimCopy(result_536870985, {hist: nimCopy(null, newlist_536870986, NTI536870918)}, NTI536870916);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536870985;

}

function HEX2BHEX3D__pureZstrutils_u2340(x_p0, x_p0_Idx, y_p1) {
  var F = {procname: "+=.+=", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/arithmetics.nim", line: 0};
  framePtr = F;
    F.line = 330;
    F.filename = "arithmetics.nim";
    x_p0[x_p0_Idx] = (x_p0[x_p0_Idx] + y_p1);
  framePtr = F.prev;

  
}

function HEX2DHEX3D__find95tax_u165(x_p0, x_p0_Idx, y_p1) {
  var F = {procname: "-=.-=", prev: framePtr, filename: "/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/arithmetics.nim", line: 0};
  framePtr = F;
    F.line = 335;
    F.filename = "arithmetics.nim";
    x_p0[x_p0_Idx] = (x_p0[x_p0_Idx] - y_p1);
  framePtr = F.prev;

  
}

function round__find95tax_u161(x_p0) {
  var result_536871076 = [0.0];

    if ((0.0 <= x_p0)) {
    result_536871076[0] = Math.round(x_p0);
    }
    else {
      result_536871076[0] = Math.ceil(x_p0);
      if ((0.5 <= (result_536871076[0] - x_p0))) {
      HEX2DHEX3D__find95tax_u165(result_536871076, 0, 1.0);
      }
      
    }
    

  return result_536871076[0];

}

function round__find95tax_u156(x_p0, places_p1) {
  var result_536871072 = 0.0;

    if ((places_p1 == 0)) {
    result_536871072 = round__find95tax_u161(x_p0);
    }
    else {
      var mult_536871081 = Math.pow(10.0, places_p1);
      result_536871072 = (round__find95tax_u161((x_p0 * mult_536871081)) / mult_536871081);
    }
    

  return result_536871072;

}

function sum__find95tax_u128(hist_p0, round_before_summing_p1) {
  var result_536871043 = 0.0;

  var F = {procname: "find_tax.sum", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 33;
    F.filename = "find_tax.nim";
    var total_536871044 = [0.0];
    Label1: {
      F.line = 34;
      var v_536871067 = ({value: 0.0, tax: 0.0});
      F.line = 249;
      F.filename = "iterators.nim";
      var i_536872086 = 0;
      F.line = 250;
      var L_536872087 = (hist_p0.hist).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_536872086 < L_536872087)) break Label3;
            F.line = 34;
            F.filename = "find_tax.nim";
            v_536871067 = hist_p0.hist[chckIndx(i_536872086, 0, (hist_p0.hist).length - 1)];
            if (round_before_summing_p1) {
            F.line = 36;
            HEX2BHEX3D__pureZstrutils_u2340(total_536871044, 0, round__find95tax_u156((v_536871067.value * v_536871067.tax), 2));
            }
            else {
              F.line = 38;
            HEX2BHEX3D__pureZstrutils_u2340(total_536871044, 0, (v_536871067.value * v_536871067.tax));
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_536872086 += 1;
            if (!(((hist_p0.hist).length == L_536872087))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 39;
    F.filename = "find_tax.nim";
    result_536871043 = total_536871044[0];
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536871043;

}

function abs__pureZmath_u237(x_p0) {
  var result_788529392 = 0.0;

    result_788529392 = Math.abs(x_p0);

  return result_788529392;

}

function calculate_taxes__find95tax_u255(amounts_p0, total_p1, tax_rates_p2) {
                            var Temporary16;

  var result_536871171 = [];

  var F = {procname: "find_tax.calculate_taxes", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
    F.line = 45;
    F.filename = "find_tax.nim";
    result_536871171 = nimCopy(null, [], NTI536871071);
    Label1: {
      F.line = 46;
      var t_536871198 = 0.0;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_536872081 = 0;
      F.line = 250;
      var L_536872082 = (tax_rates_p2).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_536872081 < L_536872082)) break Label3;
            F.line = 46;
            F.filename = "find_tax.nim";
            t_536871198 = tax_rates_p2[chckIndx(i_536872081, 0, (tax_rates_p2).length - 1)];
            F.line = 53;
            var possible_hists_536871203 = [newHistory__find95tax_u16()];
            Label4: {
              F.line = 54;
              var v_536871207 = 0.0;
              F.line = 249;
              F.filename = "iterators.nim";
              var i_536872070 = 0;
              F.line = 250;
              var L_536872071 = (amounts_p0).length;
              Label5: {
                F.line = 251;
                  Label6: while (true) {
                  if (!(i_536872070 < L_536872071)) break Label6;
                    F.line = 54;
                    F.filename = "find_tax.nim";
                    v_536871207 = amounts_p0[chckIndx(i_536872070, 0, (amounts_p0).length - 1)];
                    F.line = 55;
                    var newhists_536871212 = [];
                    Label7: {
                      F.line = 56;
                      var hist_536871235 = ({hist: []});
                      F.line = 249;
                      F.filename = "iterators.nim";
                      var i_536872066 = 0;
                      F.line = 250;
                      var L_536872067 = (possible_hists_536871203).length;
                      Label8: {
                        F.line = 251;
                          Label9: while (true) {
                          if (!(i_536872066 < L_536872067)) break Label9;
                            F.line = 56;
                            F.filename = "find_tax.nim";
                            hist_536871235 = possible_hists_536871203[chckIndx(i_536872066, 0, (possible_hists_536871203).length - 1)];
                            F.line = 58;
                            newhists_536871212.push(with__find95tax_u70(hist_536871235, {value: v_536871207, tax: 1.0}));;
                            F.line = 59;
                            newhists_536871212.push(with__find95tax_u70(hist_536871235, {value: v_536871207, tax: t_536871198}));;
                            F.line = 13;
                            F.filename = "iterators.nim";
                            i_536872066 += 1;
                            if (!(((possible_hists_536871203).length == L_536872067))) {
                            F.line = 254;
                            failedAssertImpl__stdZassertions_u84(makeNimstrLit("/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    F.line = 60;
                    F.filename = "find_tax.nim";
                    possible_hists_536871203 = nimCopy(null, newhists_536871212, NTI536871099);
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_536872070 += 1;
                    if (!(((amounts_p0).length == L_536872071))) {
                    F.line = 254;
                    failedAssertImpl__stdZassertions_u84(makeNimstrLit("/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            Label10: {
              F.line = 61;
              F.filename = "find_tax.nim";
              var hist_536871247 = ({hist: []});
              F.line = 249;
              F.filename = "iterators.nim";
              var i_536872078 = 0;
              F.line = 250;
              var L_536872079 = (possible_hists_536871203).length;
              Label11: {
                F.line = 251;
                  Label12: while (true) {
                  if (!(i_536872078 < L_536872079)) break Label12;
                    F.line = 61;
                    F.filename = "find_tax.nim";
                    hist_536871247 = possible_hists_536871203[chckIndx(i_536872078, 0, (possible_hists_536871203).length - 1)];
                    Label13: {
                      F.line = 62;
                      var round_before_summing_536871290 = false;
                      F.line = 43;
                      F.filename = "iterators.nim";
                      var i_536872076 = 0;
                      Label14: {
                        F.line = 44;
                          Label15: while (true) {
                          if (!true) break Label15;
                            F.line = 62;
                            F.filename = "find_tax.nim";
                            round_before_summing_536871290 = (Temporary16 = new Uint8Array([true, false]), Temporary16)[chckIndx(i_536872076, 0, (Temporary16).length - 1)];
                            F.line = 63;
                            var hist_sum_536871291 = sum__find95tax_u128(hist_536871247, round_before_summing_536871290);
                            if ((abs__pureZmath_u237((hist_sum_536871291 - total_p1)) < 0.00999)) {
                            F.line = 65;
                            result_536871171.push({hist: nimCopy(null, hist_536871247, NTI536870916), round_before_summing: round_before_summing_536871290, sum: hist_sum_536871291});;
                            }
                            
                            if ((1 <= i_536872076)) {
                            F.line = 46;
                            F.filename = "iterators.nim";
                            break Label14;
                            }
                            
                            F.line = 13;
                            i_536872076 += 1;
                          }
                      };
                    };
                    F.line = 13;
                    i_536872078 += 1;
                    if (!(((possible_hists_536871203).length == L_536872079))) {
                    F.line = 254;
                    failedAssertImpl__stdZassertions_u84(makeNimstrLit("/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            F.line = 13;
            i_536872081 += 1;
            if (!(((tax_rates_p2).length == L_536872082))) {
            F.line = 254;
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("/home/issa/.choosenim/toolchains/nim-2.2.2/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_536871171;

}

function parse_input_and_calc__find95tax_u666(amounts_input_p0, total_input_p1, tax_rates_input_p2) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
    var Temporary4;
      var Temporary5;
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

  var result_536871589 = ({oResultPrivate: false, eResultPrivate: [], vResultPrivate: []});

  var F = {procname: "find_tax.parse_input_and_calc", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 107;
    F.filename = "find_tax.nim";
    F.line = 1544;
    F.filename = "results.nim";
    var vHEX60gensym15_536871593 = parse_float_seq__find95tax_u549(amounts_input_p0);
    F.line = 107;
    F.filename = "find_tax.nim";
    switch (vHEX60gensym15_536871593.oResultPrivate) {
    case false:
      F.line = 1560;
      F.filename = "results.nim";
      var Temporary2 = vHEX60gensym15_536871593;
      if (ConstSet14[Temporary2.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'eResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary2.oResultPrivate, NTI33554466)); }
      result_536871589 = nimCopy(result_536871589, {oResultPrivate: false, eResultPrivate: nimCopy(null, Temporary2.eResultPrivate, NTI33554449), vResultPrivate: []}, NTI536871343);
      F.line = 1561;
      break BeforeRet;
      break;
    case true:
      var Temporary3 = vHEX60gensym15_536871593;
      if (ConstSet15[Temporary3.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'vResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary3.oResultPrivate, NTI33554466)); }
      Temporary1 = Temporary3.vResultPrivate;
      break;
    default: 
      break;
    }
    var amounts_536871597 = nimCopy(null, Temporary1, NTI536871258);
    F.line = 108;
    F.filename = "find_tax.nim";
    F.line = 1544;
    F.filename = "results.nim";
    var vHEX60gensym17_536871601 = parse_single_float__find95tax_u620(total_input_p1);
    F.line = 108;
    F.filename = "find_tax.nim";
    switch (vHEX60gensym17_536871601.oResultPrivate) {
    case false:
      F.line = 1560;
      F.filename = "results.nim";
      var Temporary5 = vHEX60gensym17_536871601;
      if (ConstSet17[Temporary5.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'eResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary5.oResultPrivate, NTI33554466)); }
      result_536871589 = nimCopy(result_536871589, {oResultPrivate: false, eResultPrivate: nimCopy(null, Temporary5.eResultPrivate, NTI33554449), vResultPrivate: []}, NTI536871343);
      F.line = 1561;
      break BeforeRet;
      break;
    case true:
      var Temporary6 = vHEX60gensym17_536871601;
      if (ConstSet18[Temporary6.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'vResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary6.oResultPrivate, NTI33554466)); }
      Temporary4 = Temporary6.vResultPrivate;
      break;
    default: 
      break;
    }
    var total_536871605 = Temporary4;
    F.line = 109;
    F.filename = "find_tax.nim";
    F.line = 1544;
    F.filename = "results.nim";
    var vHEX60gensym19_536871609 = parse_float_seq__find95tax_u549(tax_rates_input_p2);
    F.line = 109;
    F.filename = "find_tax.nim";
    switch (vHEX60gensym19_536871609.oResultPrivate) {
    case false:
      F.line = 1560;
      F.filename = "results.nim";
      var Temporary8 = vHEX60gensym19_536871609;
      if (ConstSet19[Temporary8.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'eResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary8.oResultPrivate, NTI33554466)); }
      result_536871589 = nimCopy(result_536871589, {oResultPrivate: false, eResultPrivate: nimCopy(null, Temporary8.eResultPrivate, NTI33554449), vResultPrivate: []}, NTI536871343);
      F.line = 1561;
      break BeforeRet;
      break;
    case true:
      var Temporary9 = vHEX60gensym19_536871609;
      if (ConstSet20[Temporary9.oResultPrivate]===undefined) { raiseFieldError2(makeNimstrLit("field \'vResultPrivate\' is not accessible for type \'Result\' using \'oResultPrivate = "), reprDiscriminant(Temporary9.oResultPrivate, NTI33554466)); }
      Temporary7 = Temporary9.vResultPrivate;
      break;
    default: 
      break;
    }
    var tax_rates_536871613 = nimCopy(null, Temporary7, NTI536871258);
    F.line = 110;
    F.filename = "find_tax.nim";
    result_536871589 = nimCopy(result_536871589, {oResultPrivate: true, vResultPrivate: calculate_taxes__find95tax_u255(amounts_536871597, total_536871605, tax_rates_536871613), eResultPrivate: []}, NTI536871343);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536871589;

}

function runJS(amounts_input_p0, total_input_p1, tax_rates_input_p2) {
  var result_536871996 = null;

  var F = {procname: "find_tax.runJS", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 165;
    F.filename = "find_tax.nim";
    result_536871996 = toJSStr(pack_message__find95tax_u732(parse_input_and_calc__find95tax_u666(cstrToNimstr(amounts_input_p0), cstrToNimstr(total_input_p1), cstrToNimstr(tax_rates_input_p2))));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536871996;

}
var F = {procname: "module find_tax", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module find_tax", prev: framePtr, filename: "/home/issa/projects/itemized-tax-finder/find_tax.nim", line: 0};
framePtr = F;
framePtr = F.prev;
